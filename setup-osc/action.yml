name: 'Setup ORT Server CLI'
description: 'Setup the ORT Server CLI (osc) to use in GitHub workflows.'
inputs:
  osc-version:
    description: 'The version of the ORT Server CLI to install. Defaults to latest if not specified.'
    required: false
    default: latest
  url:
    description: 'The base URL of the ORT Server instance'
    required: false
  token-url:
    description: 'The URL to request a token for the ORT Server instance'
    required: false
  client-id:
    description: 'The client ID of the ORT Server instance to authenticate with the instance. Default is ort-server'
    required: false
  username:
    description: 'The username to authenticate with the ORT Server instance'
    required: false
  password:
    description: 'The password to authenticate with the ORT Server instance'
    required: false

# language=bash
runs:
  using: composite
  steps:
    - name: Download CLI
      shell: bash
      run: |
        VERSION="${{ inputs.osc-version }}"
        ARCHIVE_NAME="osc-cli-linux-x64.tar.gz"
        BIN_DIR="$GITHUB_WORKSPACE/.bin"
        mkdir -p $BIN_DIR

        if [ "$VERSION" == "latest" ]; then
          DOWNLOAD_URL="https://github.com/eclipse-apoapsis/ort-server/releases/latest/download/$ARCHIVE_NAME"
        else
          DOWNLOAD_URL="https://github.com/eclipse-apoapsis/ort-server/releases/download/$VERSION/$ARCHIVE_NAME"
        fi

        curl --location $DOWNLOAD_URL | tar --extract --gzip --directory $BIN_DIR

        echo "$BIN_DIR" >> "$GITHUB_PATH"

    - name: Authenticate osc
      if: ${{ inputs.url != '' && inputs.username != '' && inputs.password != '' }}
      shell: bash
      run: |
        TOKEN_URL_ARG=""
        if [[ -n "${{ inputs.token-url }}" ]]; then
          TOKEN_URL_ARG="--token-url ${{ inputs.token-url }}"
        fi

        CLIENT_ID_ARG=""
        if [[ -n "${{ inputs.client-id }}" ]]; then
          CLIENT_ID_ARG="--client-id ${{ inputs.client-id }}"
        fi

        osc auth login \
          --url "${{ inputs.url }}" \
          --username "${{ inputs.username }}" \
          --password "${{ inputs.password }}" \
          $TOKEN_URL_ARG \
          $CLIENT_ID_ARG

    - name: Authentication Info
      if: ${{ inputs.url == '' || inputs.username == '' || inputs.password == '' }}
      shell: bash
      run: |
        echo "::warning::osc is running without authentication. Either configure authentication in the 'setup-osc' action (url, username and password), or authenticate manually using 'osc auth login'."
